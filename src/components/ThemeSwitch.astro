---
// Credit: rtredes2
// https://codepen.io/rtredes2/pen/rNPWXXe
import starsImage from "../assets/ThemeSwitch/stars.png";
import cloudsImage from "../assets/ThemeSwitch/clouds.png";
import moonCraterImage from "../assets/ThemeSwitch/moonCrater.png";

const stars = `url(${starsImage.src})`;
const clouds = `url(${cloudsImage.src})`;
const moonCrater = `url(${moonCraterImage.src})`;
---

<label
  id="theme-button"
  for="dark-mode"
  class="theme-button"
  aria-label="Switch theme"
>
  <div class="switch">
    <input id="dark-mode" type="checkbox" />
    <div class="insetcover">
      <div class="sun-moon sun"></div>
      <div class="sun-moon moon"></div>
      <div class="stars"></div>
    </div>
    <div class="sun-moon-shadow"></div>
    <div class="shadow-overlay"></div>
  </div>
</label>

<style
  define:vars={{
    stars,
    clouds,
    moonCrater,
  }}
>
  .theme-button *,
  .theme-button *::before,
  .theme-button *::after {
    position: relative;
    box-sizing: border-box;
  }
  .theme-button {
    width: 56px;
  }
  .theme-button:focus-within {
    outline: auto;
    outline-color: inherit;
  }
  .switch {
    border-radius: 9999px;
    border: 1px solid #00000000;
    padding: 2px;
    background-color: #409fe4;
    background-clip: padding-box;
    box-shadow: -1px 5px 4px inset rgba(0, 0, 0, 0.44);
    height: 24px;
    box-sizing: content-box;
    z-index: 1;
    border: 2px solid #00000000;
    transition: 0.1s ease;
    cursor: pointer;
  }
  .switch::before {
    content: "";
    position: absolute;
    border-radius: inherit;
    top: -1px;
    left: -1px;
    bottom: -1px;
    right: -1px;
    z-index: -1;
    background: linear-gradient(130deg, #a1b4d1, #fefefd);
  }
  .switch::after {
    content: "";
    position: absolute;
    border-radius: inherit;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: -1;
    transition: 1s ease 0.1s;
    transition: 1s cubic-bezier(0.65, -0.05, 0.29, 1);
    background-color: inherit;
    background-image: var(--clouds);
    background-size: 100%;
    background-repeat: no-repeat;
    background-position: center;
  }
  .shadow-overlay {
    position: absolute;
    inset: 0;
    box-shadow: -1px 2px 4px inset rgba(0, 0, 0, 0.44);
    border-radius: inherit;
    z-index: 10;
  }
  .sun-moon::before {
    position: absolute;
    content: "";
    border-radius: inherit;
    inset: 1px;
    background-color: #fed32f;
  }
  .insetcover {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    padding: inherit;
    overflow: hidden;
    border-radius: inherit;
  }
  .sun-moon-shadow {
    font-size: 24px;
    width: 1em;
    height: 1em;
    position: absolute;
    border-radius: 50%;
    right: calc(100% - 2px - 1em);
    transition: 0.6s ease;
    transition: 0.6s cubic-bezier(0.65, -0.05, 0.29, 1);
    z-index: 1;
    box-shadow: 0 0 12px rgba(0, 0, 0, 0.44);
  }
  .sun-moon {
    font-size: 24px;
    width: 1em;
    height: 1em;
    position: absolute;
    background-image: linear-gradient(130deg, #f2fa8f, #eb9a25);
    border-radius: 50%;
    right: calc(100% - 2px - 1em);
    transition: 0.6s ease;
    transition: 0.6s cubic-bezier(0.65, -0.05, 0.29, 1);
    background-clip: padding-box;
    z-index: 5;
    box-shadow:
      0 0 0 9px rgba(255, 255, 255, 0.1),
      0 0 0 18px rgba(255, 255, 255, 0.1),
      0 0 0 27px rgba(255, 255, 255, 0.1);
  }
  .sun-moon.moon {
    background-image: linear-gradient(130deg, #fafbfe, #9aa4b1);
    opacity: 0;
  }
  .sun-moon.moon::before {
    position: absolute;
    content: "";
    border-radius: inherit;
    inset: 1px;
    background-color: #d2d9e1;
    background-image: var(--moonCrater);
    background-size: 60%;
    background-repeat: no-repeat;
    background-position: center;
  }
  #dark-mode {
    /* Tailwinds `sr-auto` doesn't work as expected here */
    position: absolute;
    border: 0;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    word-wrap: normal;
  }
  .stars {
    background-image: var(--stars);
    position: absolute;
    width: 45%;
    bottom: 5px;
    height: 80%;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    transition: 0.4s ease 0s;
    transition: 0.6s cubic-bezier(0.65, -0.05, 0.29, 1);
    transform: translateY(-125%) translateZ(0);
  }
  #dark-mode:checked + .insetcover .sun-moon,
  #dark-mode:checked ~ .sun-moon-shadow {
    right: 2px;
  }
  #dark-mode:checked + .insetcover .sun {
    opacity: 0;
  }
  #dark-mode:not(:checked) + .insetcover .moon {
    transform: rotate(-180deg);
  }
  #dark-mode:checked + .insetcover .moon {
    opacity: 1;
  }
  #dark-mode:checked + .insetcover .stars {
    transform: translateY(0%) translateZ(0);
    transition: 1s ease 0.1s;
    transition: 1s cubic-bezier(0.65, -0.05, 0.29, 1);
  }
  .theme-button[data-dark-mode="true"] .switch {
    background-color: #212737;
  }
  .theme-button[data-dark-mode="true"] .switch::after {
    background-position: 0px 100px;
  }
</style>
